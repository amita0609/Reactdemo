{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","React","createElement","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","placeholder","defaultProps","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","Heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","About","color","backgroundColor","myStyle","setMyStyle","_useState3","_useState4","btnText","setBtnText","style","class","aria-labelledby","data-bs-parent","Alert","role","alert","data-bs-dismiss","App","heading","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.12d581de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from  'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n        </li>\r\n       \r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:'Set title',\r\n    about: 'set about'\r\n};","import React, { useState }  from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleUpClick=()=>{\r\n        // console.log(\"uppercase was clicked\"+\" \"+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLowerClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleClearClick=()=>{ \r\n        let newText=\" \";\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"uppercase was changed\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n      \r\n        let newText=document.getElementById(\"MyBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('Enter text here....');\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <h2>{props.Heading}</h2>\r\n       <div className=\"mb-3\">\r\n           <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"MyBox\" rows=\"6\"></textarea>\r\n       </div>\r\n       <button type=\"button\" className=\"btn btn-success mx-1\" onClick={handleUpClick} >Convert into UpperCase</button>\r\n       <button type=\"button\" className=\"btn btn-danger mx-1\" onClick={handleLowerClick} >Convert into LowerCase</button>\r\n       <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n       <button type=\"button\" className=\"btn btn-success mx-1\" onClick={handleCopy}>copy Text</button>\r\n    </div>\r\n\r\n    <div className=\"container my-3\">\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and{text.length} characters </p>\r\n        <p>{0.008 + text.split(\" \").length} minutes read </p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n  const[myStyle, setMyStyle]=useState({\r\n    color:'black' ,\r\n    backgroundColor:'white' \r\n\r\n  })\r\n \r\n  const[btnText,setBtnText]=useState(\"Enable Dark Mode\")\r\n  \r\n  const toggleStyle=()=>{\r\n    if(myStyle.color==='black'){\r\n      setMyStyle({\r\n        color:'white' ,\r\n        backgroundColor:'black' \r\n    \r\n      })\r\n      setBtnText(\"Enable Light Mode\")\r\n    }\r\n    else{\r\n      setMyStyle({\r\n        color:'black' ,\r\n        backgroundColor:'white' \r\n    \r\n      })\r\n      setBtnText(\"Enable Dark Mode\")\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h2 className=\"my-3\">About Us</h2>\r\n    <div class=\"accordion\" id=\"accordionExample\">\r\n    <div class=\"accordion-item\">\r\n      <h2 class=\"accordion-header\" id=\"headingOne\">\r\n        <button class=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          Accordion Item #1\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body\">\r\n          <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"accordion-item\">\r\n      <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n        <button class=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n          Accordion Item #2\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body\">\r\n          <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"accordion-item\">\r\n      <h2 class=\"accordion-header\" id=\"headingThree\">\r\n        <button class=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n          Accordion Item #3\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body\">\r\n          <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"container my-3\">\r\n    <button onClick={toggleStyle} type=\"button\" class=\"btn btn-primary my-3\">{btnText}</button>\r\n  </div>\r\n \r\n  </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n        <strong> {props.alert}</strong>\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n  )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport React from 'react';\nimport Navbar from './components/Navbar';\n\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport Alert from './components/Alert';\n\n\n// let name=\"John\"\n\nfunction App() {\n\n  return (\n   <>\n     <Navbar title=\"TextUtils\" about=\"About Us\"/>\n    \n    \n      <Alert alert=\"This is alert\"/> \n\n      <div className=\"container my-3\">\n         <Textform heading=\"Enter text to manipulate which you want\" /> \n      </div> \n      <About/>\n     \n    \n    </>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}